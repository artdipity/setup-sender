#!/bin/bash
set -e

echo "üöÄ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∞–≤—Ç–æ—Ä–∞—Å—Å—ã–ª–∫–∏ Telegram..."

# === 0. –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–æ–ª–æ—á–∫–∏ –Ω–∞ macOS ===
if [[ "$OSTYPE" != "darwin"* ]]; then
  echo "–≠—Ç–æ—Ç –∏–Ω—Å—Ç–∞–ª–ª—è—Ç–æ—Ä —Ä–∞—Å—Å—á–∏—Ç–∞–Ω –Ω–∞ macOS. –î–ª—è Linux –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –∞–¥–∞–ø—Ç–∞—Ü–∏—è."
fi

# === 1. Homebrew (–µ—Å–ª–∏ –Ω–µ—Ç) ===
if ! command -v brew &> /dev/null; then
  echo "üç∫ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Homebrew..."
  /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
fi

# === 2. pyenv –∏ pyenv-virtualenv ===
echo "üêç –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º pyenv –∏ pyenv-virtualenv..."
brew install pyenv pyenv-virtualenv git nano

# –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –≤ ~/.zshrc (–µ—Å–ª–∏ –Ω–µ—Ç)
if ! grep -q 'pyenv init' ~/.zshrc; then
  {
    echo ''
    echo '# pyenv init'
    echo 'eval "$(pyenv init -)"'
    echo 'eval "$(pyenv virtualenv-init -)"'
  } >> ~/.zshrc
fi

# –ó–∞–≥—Ä—É–∂–∞–µ–º –æ–∫—Ä—É–∂–µ–Ω–∏–µ pyenv –≤ —Ç–µ–∫—É—â—É—é –æ–±–æ–ª–æ—á–∫—É
eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"

# === 3. Python —á–µ—Ä–µ–∑ pyenv ===
PYTHON_VERSION=3.10.13
if ! pyenv versions | grep -q "$PYTHON_VERSION"; then
  echo "‚¨áÔ∏è –°—Ç–∞–≤–∏–º Python $PYTHON_VERSION (–º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –≤—Ä–µ–º—è)..."
  pyenv install "$PYTHON_VERSION"
fi

# –°–æ–∑–¥–∞—ë–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ (–µ—Å–ª–∏ –Ω–µ—Ç)
if ! pyenv virtualenvs | grep -q "tg_env_tgsender"; then
  pyenv virtualenv "$PYTHON_VERSION" tg_env_tgsender
fi

# === 4. –°–æ–∑–¥–∞—ë–º –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞ ===
TARGET_DIR=~/tg_sender
mkdir -p "$TARGET_DIR"
cd "$TARGET_DIR"

# === 5. requirements.txt ===
cat <<EOF > requirements.txt
telethon==1.41.2
apscheduler==3.11.0
python-dotenv==1.1.1
rsa==4.9.1
pyaes==1.6.1
pyasn1==0.6.1
tzlocal==5.3.1
EOF

# === 6. –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∏ —Å—Ç–∞–≤–∏–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ ===
pyenv activate tg_env_tgsender
echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
pip install --upgrade pip
pip install -r requirements.txt

# === 7. –í–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ===
echo "‚û°Ô∏è –í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:"
read -p "API_ID (—Å my.telegram.org): " API_ID
read -p "API_HASH: " API_HASH
read -p "PHONE (+380...): " PHONE

echo "‚û°Ô∏è –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Ä–∞—Å—Å—ã–ª–∫–∏ (–æ–∫–æ–Ω—á–∞–Ω–∏–µ Ctrl+D):"
MESSAGE=$(</dev/stdin)

# === 8. .env ===
cat <<EOF > .env
API_ID=$API_ID
API_HASH=$API_HASH
PHONE=$PHONE
EOF

# === 9. message.txt ===
cat <<EOF > message.txt
$MESSAGE
EOF

# === 10. sender_full.py ===
cat <<'EOF' > sender_full.py
import os
import re
import asyncio
from typing import List, Tuple, Optional
from telethon import TelegramClient
from telethon.errors import FloodWaitError
from apscheduler.schedulers.asyncio import AsyncIOScheduler
from dotenv import load_dotenv

# --- –∑–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π ---
load_dotenv()
API_ID = int(os.getenv("API_ID"))
API_HASH = os.getenv("API_HASH")
PHONE = os.getenv("PHONE")

MESSAGE_FILE = "message.txt"
GROUPS_DIR = "groups"
LOGS_DIR = "logs"

GROUP_FILES = {
    "hourly": os.path.join(GROUPS_DIR, "hourly.txt"),
    "daily":  os.path.join(GROUPS_DIR, "daily.txt"),
    "3days":  os.path.join(GROUPS_DIR, "3days.txt"),
}

os.makedirs(GROUPS_DIR, exist_ok=True)
os.makedirs(LOGS_DIR, exist_ok=True)

def load_message() -> str:
    if os.path.exists(MESSAGE_FILE):
        with open(MESSAGE_FILE, "r", encoding="utf-8") as f:
            return f.read().strip()
    return "‚ö°Ô∏è –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"

def load_groups(path: str) -> List[str]:
    if not os.path.exists(path):
        return []
    with open(path, "r", encoding="utf-8") as f:
        lines = [ln.strip() for ln in f if ln.strip() and not ln.strip().startswith("#")]
    # –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã, —Å–æ—Ö—Ä–∞–Ω—è—è –ø–æ—Ä—è–¥–æ–∫
    seen = set()
    result = []
    for g in lines:
        if g not in seen:
            seen.add(g)
            result.append(g)
    return result

def parse_topic_link(link: str) -> Tuple[str, Optional[int]]:
    """
    –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ñ–æ—Ä—É–º–Ω—ã—Ö —Ç–µ–º: https://t.me/<chat>/<topic_id>
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç (–æ—Å–Ω–æ–≤–Ω–∞—è_—Å—Å—ã–ª–∫–∞, topic_id|None).
    """
    m = re.match(r'^(https?://t\.me/[^/\s]+)/(\d+)$', link)
    if m:
        base = m.group(1)
        topic_id = int(m.group(2))
        return base, topic_id
    return link, None

async def send_one(client: TelegramClient, link: str, message: str, label: str):
    base, topic_id = parse_topic_link(link)
    try:
        if topic_id:
            # –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é —Ç–µ–º—É —Ñ–æ—Ä—É–º–∞ –∫–∞–∫ reply_to
            await client.send_message(base, message, reply_to=topic_id)
        else:
            await client.send_message(base, message)
        print(f"[{label}] -> {link} ‚úÖ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
    except FloodWaitError as fw:
        print(f"[{label}] -> {link} ‚ùå FloodWait: {fw.seconds}s")
    except Exception as e:
        print(f"[{label}] -> {link} ‚ùå –æ—à–∏–±–∫–∞: {e}")

async def blast_list(client: TelegramClient, label: str):
    """
    –ú–≥–Ω–æ–≤–µ–Ω–Ω–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞ –ø–æ –≤—Å–µ–º—É —Å–ø–∏—Å–∫—É (–¥–ª—è –∞–≤—Ç–æ—Å—Ç–∞—Ä—Ç–∞).
    """
    path = GROUP_FILES[label]
    groups = load_groups(path)
    msg = load_message()
    if not groups:
        print(f"[{label}] —Å–ø–∏—Å–æ–∫ –ø—É—Å—Ç ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞–µ–º")
        return
    print(f"=== –ê–≤—Ç–æ—Å—Ç–∞—Ä—Ç: {label} ({len(groups)}) ===")
    for g in groups:
        await send_one(client, g, msg, label)
        await asyncio.sleep(3)
    print(f"=== –ê–≤—Ç–æ—Å—Ç–∞—Ä—Ç {label} –∑–∞–≤–µ—Ä—à—ë–Ω ===")

async def send_list(client: TelegramClient, label: str):
    """
    –ü–ª–∞–Ω–æ–≤–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞ —Å–ø–∏—Å–∫–∞ label —Å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–π –ø–æ–¥–≥—Ä—É–∑–∫–æ–π —Ç–µ–∫—Å—Ç–∞ –∏ –≥—Ä—É–ø–ø.
    """
    path = GROUP_FILES[label]
    groups = load_groups(path)
    msg = load_message()
    if not groups:
        print(f"[{label}] —Å–ø–∏—Å–æ–∫ –ø—É—Å—Ç ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞–µ–º")
        return
    print(f"=== –†–∞—Å—Å—ã–ª–∫–∞ {label} –Ω–∞—á–∞—Ç–∞ ===")
    for g in groups:
        await send_one(client, g, msg, label)
        await asyncio.sleep(3)
    print(f"=== –†–∞—Å—Å—ã–ª–∫–∞ {label} –∑–∞–≤–µ—Ä—à–µ–Ω–∞ ===")

async def main():
    client = TelegramClient("tg_session", API_ID, API_HASH)
    await client.start(phone=PHONE)
    print("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞.")

    # 1) –ê–≤—Ç–æ—Å—Ç–∞—Ä—Ç: —Å—Ä–∞–∑—É –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ –≤—Å–µ–º —Ç—Ä–µ–º —Å–ø–∏—Å–∫–∞–º
    for lb in ("hourly", "daily", "3days"):
        await blast_list(client, lb)

    # 2) –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫: hourly/daily/3days
    scheduler = AsyncIOScheduler()
    scheduler.add_job(lambda: asyncio.create_task(send_list(client, "hourly")),
                      "interval", hours=1)
    scheduler.add_job(lambda: asyncio.create_task(send_list(client, "daily")),
                      "interval", hours=24)
    scheduler.add_job(lambda: asyncio.create_task(send_list(client, "3days")),
                      "interval", hours=72)
    scheduler.start()

    print("‚è≥ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ. –†–∞–±–æ—Ç–∞–µ—Ç –∫—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω–æ...")
    await asyncio.Event().wait()

if __name__ == "__main__":
    asyncio.run(main())
EOF

# === 11. –ì—Ä—É–ø–ø—ã ===
mkdir -p groups

# ---- hourly.txt (—Ç–≤–æ–∏ –≥—Ä—É–ø–ø—ã) ----
cat <<'EOF' > groups/hourly.txt
https://t.me/Sugar_Desk
https://t.me/devil_desk
https://t.me/TopDatingForum
https://t.me/brachnie/4
https://t.me/Dating_Forums
https://t.me/adult_news1/1
https://t.me/brachnie/1
https://t.me/datingforumm/1
https://t.me/dating_board/1
https://t.me/board_adult1/1
https://t.me/TvoyaVip/1
https://t.me/OFM_Rich/1
https://t.me/StartDoska/1
https://t.me/onlyfans_board1/1
https://t.me/LookHereDoskaOF/1
https://t.me/JustDoska/1
https://t.me/THE_EDENIC_DESK
https://t.me/only_traff
https://t.me/luxury_adult
https://t.me/adult_team_desk
https://t.me/TeamUnityHub
https://t.me/lixxidesk
https://t.me/PandaDesk
https://t.me/barbie_agency111
https://t.me/onlymiumiu
https://t.me/adult_desk
https://t.me/DinoDesk
https://t.me/easyonlyeo
https://t.me/doska_365
https://t.me/adult_board_ofm
https://t.me/BuddaHubBoard
https://t.me/TopDatingForum
https://t.me/dating_board
https://t.me/mixxidesk
https://t.me/adultbestdesk
https://t.me/desk_shark
https://t.me/OFBchat
https://t.me/OnlyBulletin
https://t.me/Adults_play_Board
https://t.me/desk_lion
https://t.me/ADOboard
https://t.me/Minnieadult
https://t.me/board_adult1
https://t.me/promoperfrection
https://t.me/only_fasly
https://t.me/webcamadultdesk
https://t.me/KarandashDesk
https://t.me/ONLYTRAFCH
https://t.me/IndustryAdult
https://t.me/Onlyfans_Hunters
https://t.me/bigdoskaoficial
https://t.me/bigdoskaof
https://t.me/LookHereDoskaOF
https://t.me/onlyfans_live_board
https://t.me/of_desk
https://t.me/board_onlyfans
https://t.me/onlyfans_desk
https://t.me/rumorsii
https://t.me/ICE_adult
https://t.me/easyonlyeasyeo
https://t.me/onlyfans_chaty
https://t.me/onlyfansboom
https://t.me/Adaltpro
https://t.me/adulters_BF
https://t.me/boardonlyfans
https://t.me/webcamdoska
https://t.me/forumonly/597
https://t.me/onlydeskadult
https://t.me/TeamUnityWow
https://t.me/FunsDesk
https://t.me/onlyfans_legit
https://t.me/ofmboardonlyfans
https://t.me/TeamUnityAdult
https://t.me/theOFMdesk
https://t.me/MonkeyDesk
https://t.me/only_adult_chat
https://t.me/onlyfans_mart
https://t.me/DeskCrew
https://t.me/of_desk_adalt
https://t.me/VampireDesk
https://t.me/OnlyBoardTG
https://t.me/HubDesk
https://t.me/unholy_desk
https://t.me/adult_headhunt
https://t.me/doska1012
https://t.me/Advertising_BF
https://t.me/AdultHarmonyDesk
https://t.me/adult_news1
https://t.me/StartDoska
https://t.me/virgin_grooup
https://t.me/Adult_Board
https://t.me/adultswit_desk
https://t.me/webcam_token
https://t.me/DeskSpark
https://t.me/SoloMoon_community
https://t.me/onlyadating
https://t.me/CrocoDesk
https://t.me/collectordesk
https://t.me/acaagawgfwa
https://t.me/ADULT_DOSKA
https://t.me/only_adult_desk
https://t.me/Meduza_OF_Desk
https://t.me/black_only_desk
https://t.me/coredesk
https://t.me/only_desk
https://t.me/jobadult
https://t.me/nikodesk
https://t.me/onlydesc
https://t.me/wixxidesk
https://t.me/onlyfanspromoroom
https://t.me/adult_markets
https://t.me/OnlyDesk
https://t.me/BIGDesk
https://t.me/Dating_Forums
https://t.me/SugarDesk
https://t.me/disneydesk
https://t.me/Workers_Desk
https://t.me/camweboard
https://t.me/goatsof
https://t.me/OTC_ADULT
https://t.me/apreeteam_desk
https://t.me/adulthubdoska
EOF

# ---- daily.txt ----
cat <<'EOF' > groups/daily.txt
https://t.me/adult_18_board
https://t.me/onlyfanspromoroom
https://t.me/Adult_platform
https://t.me/OnlyBulletin
https://t.me/adult_desk
EOF

# ---- 3days.txt ----
cat <<'EOF' > groups/3days.txt
https://t.me/CardoCrewDesk
https://t.me/CardoCrewDeskTraffic
https://t.me/adszavety
EOF

# === 12. —Å–µ—Ä–≤–∏—Å–Ω—ã–µ —Å–∫—Ä–∏–ø—Ç—ã ===

# –∑–∞–ø—É—Å–∫
cat <<'EOF' > start.sh
#!/bin/bash
cd ~/tg_sender
eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"
pyenv activate tg_env_tgsender
echo "‚ñ∂Ô∏è  –°—Ç–∞—Ä—Ç —Ä–∞—Å—Å—ã–ª–∫–∏..."
python sender_full.py
EOF
chmod +x start.sh

# —Å—Ç–æ–ø
cat <<'EOF' > stop.sh
#!/bin/bash
pkill -f "python sender_full.py" || true
echo "‚õîÔ∏è –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ."
EOF
chmod +x stop.sh

# —Å—Ç–∞—Ç—É—Å
cat <<'EOF' > status.sh
#!/bin/bash
ps aux | grep sender_full.py | grep -v grep || echo "–ù–µ –∑–∞–ø—É—â–µ–Ω–æ"
EOF
chmod +x status.sh

# —Å–º–µ–Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
cat <<'EOF' > setmsg.sh
#!/bin/bash
cd ~/tg_sender
echo "üìù –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è (Ctrl+D ‚Äî –∑–∞–≤–µ—Ä—à–∏—Ç—å –≤–≤–æ–¥):"
cat > message.txt
echo "‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ message.txt"
EOF
chmod +x setmsg.sh

# —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–∏—Å–∫–æ–≤ –≥—Ä—É–ø–ø
cat <<'EOF' > setgroups.sh
#!/bin/bash
cd ~/tg_sender/groups
echo "üìÇ –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º –≥—Ä—É–ø–ø—ã. –§–∞–π–ª—ã: hourly.txt, daily.txt, 3days.txt"
echo "–û—Ç–∫—Ä–æ–µ—Ç—Å—è nano. –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ: Ctrl+O, Enter. –í—ã—Ö–æ–¥: Ctrl+X."
read -p "–û—Ç–∫—Ä—ã—Ç—å hourly.txt? (y/n): " A; [[ "$A" == "y" ]] && nano hourly.txt
read -p "–û—Ç–∫—Ä—ã—Ç—å daily.txt? (y/n): " B; [[ "$B" == "y" ]] && nano daily.txt
read -p "–û—Ç–∫—Ä—ã—Ç—å 3days.txt? (y/n): " C; [[ "$C" == "y" ]] && nano 3days.txt
echo "‚úÖ –ì—Ä—É–ø–ø—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã."
EOF
chmod +x setgroups.sh

# –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ .env –±–µ–∑ –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–∏
cat <<'EOF' > setenv.sh
#!/bin/bash
cd ~/tg_sender
read -p "API_ID: " API_ID
read -p "API_HASH: " API_HASH
read -p "PHONE (+...): " PHONE
cat <<ENV > .env
API_ID=$API_ID
API_HASH=$API_HASH
PHONE=$PHONE
ENV
echo "‚úÖ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ .env"
EOF
chmod +x setenv.sh

echo "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo "–¢–µ–ø–µ—Ä—å –∑–∞–ø—É—Å—Ç–∏—Ç–µ:"
echo "cd ~/tg_sender && ./start.sh"
